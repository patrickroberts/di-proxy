{"version":3,"sources":["index.js"],"names":["module","exports","require","Injector","inject","callbackfn","TypeError","String","call","apply","this","proxy","concat","Array","prototype","slice","arguments","has","get","set","Proxy","target","propertyName","receiver","dependency","Object","defineProperty","configurable","enumerable","value","writable","bind","WeakMap"],"mappings":"mNAAAA,EAAOC,QAAU,SAAyBC,GASxC,SAASC,KAsBT,SAASC,EAAQC,GACf,GAA0B,mBAAfA,EACT,MAAM,IAAIC,UAAaC,OAAOF,GAAxB,sBAGR,OAAO,WACL,OAAOA,EAAWG,KAAXC,MAAAJ,GAAgBK,KAAMC,GAAtBC,OAAAC,MAAAC,UAAAC,MAAAP,KAAgCQ,cApC3C,GAAuB,mBAAZd,EACT,MAAM,IAAII,UAAaC,OAAOL,GAAxB,sBAIR,GAAIQ,KAAKO,IAAIf,GAAU,OAAOQ,KAAKQ,IAAIhB,GACvCQ,KAAKS,IAAIjB,EAASE,GAIlBD,EAASW,UAAY,IAAIM,UACvBF,IADiC,SAC5BG,EAAQC,EAAcC,GACzB,IAAMC,EAAatB,EAAQoB,GAU3B,OAPAG,OAAOC,eAAeH,EAAUD,GAC9BK,cAAc,EACdC,YAAY,EACZC,MAAOL,EACPM,UAAU,IAGLN,KAKX,IAAMb,EAAQ,IAAIR,EAclB,OAAOC,GACP2B,KAAK,IAAIC","file":"di-proxy.min.js","sourcesContent":["module.exports = function createInjector (require) {\r\n  if (typeof require !== 'function') {\r\n    throw new TypeError(`${String(require)} is not a function`)\r\n  }\r\n\r\n  // weakly memoize injector with require function as key\r\n  if (this.has(require)) return this.get(require)\r\n  this.set(require, inject)\r\n\r\n  function Injector () {}\r\n\r\n  Injector.prototype = new Proxy({}, {\r\n    get (target, propertyName, receiver) {\r\n      const dependency = require(propertyName)\r\n\r\n      // memoize get trap\r\n      Object.defineProperty(receiver, propertyName, {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value: dependency,\r\n        writable: true\r\n      })\r\n\r\n      return dependency\r\n    }\r\n  })\r\n\r\n  // create a memoized get trap proxy\r\n  const proxy = new Injector()\r\n\r\n  // expect callback function to take dependency object as first argument\r\n  function inject (callbackfn) {\r\n    if (typeof callbackfn !== 'function') {\r\n      throw new TypeError(`${String(callbackfn)} is not a function`)\r\n    }\r\n\r\n    return function () {\r\n      return callbackfn.call(this, proxy, ...arguments)\r\n    }\r\n  }\r\n\r\n  // return wrapped function\r\n  return inject\r\n}.bind(new WeakMap())\r\n"]}